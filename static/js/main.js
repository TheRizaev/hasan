function createVideoCard(videoData, delay = 0) {
    const card = document.createElement('div');
    card.className = 'video-card';
    card.style.animationDelay = `${delay}ms`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∏–¥–µ–æ
    card.onclick = function() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Å—Ç–∞–≤–Ω–æ–π ID: user_id + video_id
        const videoUrl = `/video/${videoData.user_id}__${videoData.video_id}/`;
        window.location.href = videoUrl;
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–µ–≤—å—é, —Å –∑–∞–ø–∞—Å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
    const previewPath = videoData.thumbnail_url ? 
        videoData.thumbnail_url : 
        `/static/placeholder.jpg`;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –∫–∞–Ω–∞–ª–∞: –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º display_name, –∑–∞—Ç–µ–º channel, –∑–∞—Ç–µ–º user_id
    const channelName = videoData.display_name || videoData.channel || videoData.user_id || "";
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –≤–º–µ—Å—Ç–æ –≤–∏–¥–µ–æ
    card.innerHTML = `
        <div class="thumbnail">
            <img src="${previewPath}" alt="${videoData.title}" loading="lazy" onerror="this.src='/static/placeholder.jpg'">
            <div class="duration">${videoData.duration || "00:00"}</div>
        </div>
        <div class="video-info">
            <div class="video-title">${videoData.title}</div>
            <div class="channel-name">${channelName}</div>
            <div class="video-stats">
                <span>${videoData.views_formatted || videoData.views || "0 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"}</span>
                <span>‚Ä¢ ${videoData.upload_date_formatted || (videoData.upload_date ? videoData.upload_date.slice(0, 10) : "–ù–µ–¥–∞–≤–Ω–æ")}</span>
            </div>
        </div>
    `;

    return card;
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
let videoData = [];
let totalVideos = 0;
let currentIndex = 0;
const videosPerPage = 20;
let loadingSpinner, videosContainer;
let isLoading = false;

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –∏–∑ GCS
function loadVideosFromGCS() {
    if (isLoading) return;
    
    isLoading = true;
    if (loadingSpinner) loadingSpinner.style.display = 'flex';
    
    console.log(`Fetching videos: offset=${currentIndex}, limit=${videosPerPage}`);
    
    fetch(`/api/list-videos/?offset=${currentIndex}&limit=${videosPerPage}`)
        .then(response => response.json())
        .then(data => {
            isLoading = false;
            if (loadingSpinner) loadingSpinner.style.display = 'none';
            
            console.log('API response:', data);
            
            if (data.success && data.videos) {
                videoData.push(...data.videos);
                totalVideos = data.total || videoData.length;
                
                if (videosContainer) {
                    if (currentIndex === 0) {
                        videosContainer.innerHTML = '';
                    }
                    
                    data.videos.forEach((video, index) => {
                        const card = createVideoCard(video, index * 100);
                        videosContainer.appendChild(card);
                    });
                    
                    currentIndex += data.videos.length;
                    
                    if (videoData.length === 0) {
                        const emptyState = document.createElement('div');
                        emptyState.className = 'empty-state';
                        emptyState.innerHTML = `
                            <div style="text-align: center; padding: 40px 20px;">
                                <div style="font-size: 48px; margin-bottom: 20px;">üê∞</div>
                                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –≤–∏–¥–µ–æ</h3>
                                <p>–í–∏–¥–µ–æ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å, –∫–æ–≥–¥–∞ –∞–≤—Ç–æ—Ä—ã –Ω–∞—á–Ω—É—Ç –∏—Ö –∑–∞–≥—Ä—É–∂–∞—Ç—å</p>
                            </div>
                        `;
                        videosContainer.appendChild(emptyState);
                    }
                }
            } else {
                console.error('API returned no videos:', data);
            }
        })
        .catch(error => {
            isLoading = false;
            if (loadingSpinner) loadingSpinner.style.display = 'none';
            console.error('Error fetching videos:', error);
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞)
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function loadMoreVideos() {
    if (isLoading || currentIndex >= totalVideos) return;
    
    loadingSpinner = document.getElementById('loading-spinner');
    isLoading = true;
    if (loadingSpinner) loadingSpinner.style.display = 'flex';
    
    loadVideosFromGCS();
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Å –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–æ–º
let scrollTimeout;
function handleScroll() {
    if (scrollTimeout) clearTimeout(scrollTimeout);
    
    scrollTimeout = setTimeout(() => {
        if (!videosContainer) return;
        
        const lastVideoCard = videosContainer.querySelector('.video-card:last-child');
        
        if (lastVideoCard) {
            const lastVideoRect = lastVideoCard.getBoundingClientRect();
            const offset = 200;
            
            if (lastVideoRect.bottom <= window.innerHeight + offset && !isLoading) {
                console.log('Triggering loadMoreVideos');
                loadMoreVideos();
            }
        }
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ
function searchVideos(query) {
    if (!query.trim() || !videoData.length) return [];
    
    query = query.toLowerCase();
    return videoData.filter(video => 
        (video.title && video.title.toLowerCase().includes(query)) || 
        (video.display_name && video.display_name.toLowerCase().includes(query)) ||
        (video.channel && video.channel.toLowerCase().includes(query)) ||
        (video.user_id && video.user_id.toLowerCase().includes(query))
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
function showSearchResults(results, searchDropdown) {
    if (!searchDropdown) return;
    
    searchDropdown.innerHTML = '';
    
    if (results.length === 0) {
        searchDropdown.classList.remove('show');
        return;
    }
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    const displayResults = results.slice(0, 5);
    
    displayResults.forEach(video => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–µ–≤—å—é, —Å –∑–∞–ø–∞—Å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
        const previewPath = video.thumbnail_url ? 
            video.thumbnail_url : 
            `/static/placeholder.jpg`;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const channelName = video.display_name || video.channel || video.user_id || '';
            
        const resultItem = document.createElement('div');
        resultItem.className = 'search-result';
        resultItem.innerHTML = `
            <div class="search-thumbnail">
                <img src="${previewPath}" loading="lazy" onerror="this.src='/static/placeholder.jpg'" alt="${video.title}">
            </div>
            <div class="search-info">
                <div class="search-title">${video.title}</div>
                <div class="search-channel">${channelName}</div>
            </div>
        `;
        
        resultItem.addEventListener('click', function() {
            window.location.href = `/video/${video.user_id}__${video.video_id}/`;
        });
        
        searchDropdown.appendChild(resultItem);
    });
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    if (results.length > 5) {
        const showMore = document.createElement('div');
        showMore.className = 'search-more';
        showMore.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã';
        
        showMore.addEventListener('click', function() {
            const searchInput = document.getElementById('search-input');
            if (searchInput) {
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
                window.location.href = `/search?query=${encodeURIComponent(searchInput.value)}`;
            }
        });
        
        searchDropdown.appendChild(showMore);
    }
    
    searchDropdown.classList.add('show');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
function setupSearch() {
    const searchInput = document.getElementById('search-input');
    const searchDropdown = document.getElementById('search-dropdown');
    const searchButton = document.querySelector('.search-button');
    
    if (!searchInput || !searchDropdown) return;
    
    // –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ
    let searchTimeout;
    searchInput.addEventListener('input', function() {
        if (searchTimeout) clearTimeout(searchTimeout);
        
        const query = this.value;
        
        // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π, —Å–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if (!query.trim()) {
            searchDropdown.classList.remove('show');
            return;
        }
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å–∏—Å—Ç–µ–º—É
        searchTimeout = setTimeout(() => {
            const results = searchVideos(query);
            showSearchResults(results, searchDropdown);
        }, 300);
    });
    
    searchInput.addEventListener('focus', function() {
        if (this.value.trim()) {
            const results = searchVideos(this.value);
            showSearchResults(results, searchDropdown);
        }
    });
    
    document.addEventListener('click', function(e) {
        if (searchInput && searchDropdown && 
            !searchInput.contains(e.target) && 
            !searchDropdown.contains(e.target)) {
            searchDropdown.classList.remove('show');
        }
    });
    
    if (searchButton) {
        searchButton.addEventListener('click', function() {
            if (searchInput.value.trim()) {
                window.location.href = `/search?query=${encodeURIComponent(searchInput.value)}`;
            }
        });
    }
    
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && this.value.trim()) {
            window.location.href = `/search?query=${encodeURIComponent(this.value)}`;
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
function setupSidebar() {
    const sidebarToggle = document.getElementById('sidebar-toggle');
    const sidebar = document.getElementById('sidebar');
    const mainContainer = document.querySelector('.main-container');
    
    if (!sidebarToggle || !sidebar || !mainContainer) return;
    
    sidebarToggle.addEventListener('click', function() {
        sidebar.classList.toggle('collapsed');
        mainContainer.classList.toggle('expanded');
    });
}

// Function to make sidebar menu items active when clicked
function setupSidebarMenuItems() {
    const menuItems = document.querySelectorAll('.sidebar .menu-item');
    
    if (!menuItems.length) return;
    
    menuItems.forEach(item => {
        // Skip items that already have onclick handlers (like Studio and Home)
        if (item.getAttribute('onclick')) return;
        
        item.addEventListener('click', function() {
            // Remove active class from all items
            menuItems.forEach(i => i.classList.remove('active'));
            // Add active class to clicked item
            this.classList.add('active');
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function setupThemeToggle() {
    const themeToggle = document.querySelector('.theme-toggle');
    const body = document.body;
    const themeTransition = document.querySelector('.theme-transition');
    const toggleText = document.querySelector('.toggle-text');
    
    if (!themeToggle || !themeTransition || !toggleText) return;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const savedTheme = localStorage.getItem('kronik-theme');
    if (savedTheme) {
        if (savedTheme === 'light') {
            body.classList.remove('dark-theme');
            body.classList.add('light-theme');
        } else {
            body.classList.remove('light-theme');
            body.classList.add('dark-theme');
        }
    }
    
    themeToggle.addEventListener('click', function() {
        const isDark = body.classList.contains('dark-theme');
        themeTransition.className = `theme-transition ${isDark ? 'light' : 'dark'} animating`;
        
        setTimeout(() => {
            body.classList.toggle('dark-theme');
            body.classList.toggle('light-theme');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            const newTheme = body.classList.contains('light-theme') ? 'light' : 'dark';
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É –≤ localStorage
            localStorage.setItem('kronik-theme', newTheme);
        }, 500);
        
        setTimeout(() => {
            themeTransition.classList.remove('animating');
        }, 1500);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é
function setupUserMenu() {
    const userMenu = document.querySelector('.user-menu');
    const userDropdown = document.querySelector('.user-dropdown');
    
    if (!userMenu || !userDropdown) return;
    
    userMenu.addEventListener('click', function(e) {
        e.stopPropagation();
        userDropdown.classList.toggle('show');
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –Ω–µ–≥–æ
    document.addEventListener('click', function(e) {
        if (userMenu && userDropdown && 
            !userMenu.contains(e.target)) {
            userDropdown.classList.remove('show');
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
function setupMobileMenu() {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.querySelector('.overlay');
    
    if (!sidebar || !overlay) return;
    
    if (mobileMenuButton) {
        mobileMenuButton.addEventListener('click', function() {
            sidebar.classList.toggle('show');
            overlay.classList.toggle('show');
        });
    }
    
    overlay.addEventListener('click', function() {
        sidebar.classList.remove('show');
        overlay.classList.remove('show');
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function setupCategories() {
    const categoryChips = document.querySelectorAll('.category-chip');
    
    if (!categoryChips.length || !videosContainer) return;
    
    categoryChips.forEach(chip => {
        chip.addEventListener('click', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            categoryChips.forEach(c => c.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            this.classList.add('active');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            currentIndex = 0;
            
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            videosContainer.innerHTML = '';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            if (loadingSpinner) loadingSpinner.style.display = 'flex';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è UX –∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–í—Å–µ", –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ
                if (category === '–≤—Å–µ') {
                    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –∑–∞–Ω–æ–≤–æ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
                    shuffleArray(videoData);
                    
                    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—É—é –ø–∞—Ä—Ç–∏—é –≤–∏–¥–µ–æ
                    for (let i = 0; i < Math.min(videosPerPage, videoData.length); i++) {
                        const card = createVideoCard(videoData[i], i * 50); // –£–º–µ–Ω—å—à–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                        videosContainer.appendChild(card);
                        currentIndex++;
                    }
                } else {
                    // –§–∏–ª—å—Ç—Ä—É–µ–º –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    const filteredVideos = videoData.filter(video => {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å)
                        if (video.category) {
                            return video.category.toLowerCase().includes(category);
                        }
                        return false;
                    });
                    
                    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
                    shuffleArray(filteredVideos);
                    
                    // –ï—Å–ª–∏ –Ω–µ—Ç –≤–∏–¥–µ–æ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    if (filteredVideos.length === 0) {
                        const emptyState = document.createElement('div');
                        emptyState.className = 'empty-state';
                        emptyState.innerHTML = `
                            <div style="text-align: center; padding: 40px 20px;">
                                <div style="font-size: 48px; margin-bottom: 20px;">üê∞</div>
                                <h3>–ù–µ—Ç –≤–∏–¥–µ–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${this.textContent}"</h3>
                                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ</p>
                            </div>
                        `;
                        videosContainer.appendChild(emptyState);
                    } else {
                        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
                        for (let i = 0; i < Math.min(videosPerPage, filteredVideos.length); i++) {
                            const card = createVideoCard(filteredVideos[i], i * 50);
                            videosContainer.appendChild(card);
                        }
                    }
                }
                
                // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                if (loadingSpinner) loadingSpinner.style.display = 'none';
            }, 300);
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadingSpinner = document.getElementById('loading-spinner');
    videosContainer = document.getElementById('videos-container');
    
    if (videosContainer && videosContainer.children.length === 0) {
        console.log('Initial video load');
        loadVideosFromGCS();
    }
    
    window.addEventListener('scroll', handleScroll, { passive: true });
    
    setupSearch();
    setupSidebar();
    setupThemeToggle();
    setupUserMenu();
    setupMobileMenu();
    setupCategories();
    setupSidebarMenuItems();
});